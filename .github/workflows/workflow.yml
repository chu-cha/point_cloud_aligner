name: Build and Release Aligner

on:
  push:
    tags:
      - 'v*'  # Запускать при создании тегов вида v1.0, v2.0 и т.д.
    branches:
      - main  # Тестовая сборка при пуше в main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: ${{ github.workspace }}/build
      PACKAGE_NAME: aligner

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          qt6-base-dev \
          libvtk9-dev \
          libpcl-dev \
          libglew-dev \
          debhelper \
          dpkg-dev

    - name: Configure project
      run: |
        mkdir -p $BUILD_DIR
        cmake -B $BUILD_DIR -S . \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH="/usr/lib/x86_64-linux-gnu/cmake/Qt6"

    - name: Build project
      run: |
        cmake --build $BUILD_DIR --parallel $(nproc)

    - name: Generate DEB package
      run: |
        cd $BUILD_DIR
        cpack -G DEB --config CPackConfig.cmake
        PACKAGE_FILE=$(ls *.deb)
        echo "PACKAGE_FILE=${PACKAGE_FILE}" >> $GITHUB_ENV

    - name: Create Release (only for tags)
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: "Aligner ${{ github.ref_name }}"
        draft: false
        prerelease: false
        body: "Automatic release of Aligner point cloud tool"

    - name: Upload Release Asset (only for tags)
      if: steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.BUILD_DIR }}/${{ env.PACKAGE_FILE }}
        asset_name: ${{ env.PACKAGE_FILE }}
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload Artifact (for branch builds)
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PACKAGE_NAME }}-deb-package
        path: ${{ env.BUILD_DIR }}/${{ env.PACKAGE_FILE }}
        retention-days: 3
