name: Build and Release Ubuntu

on:
  push:
    branches: [main]

jobs:
  build-and-package:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate commit hash tag
      id: tag
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        echo "TAG_NAME=commit-$COMMIT_HASH" >> $GITHUB_ENV
        echo "Generated tag: $TAG_NAME"

    - name: Debug PCL packages
      run: |
        echo "=== Доступные пакеты PCL visualization ==="
        apt-cache search pcl | grep visualization || echo "PCL visualization пакеты не найдены"
        echo ""
        echo "=== Информация о libpcl-visualization1.12-dev ==="
        apt-cache show libpcl-visualization1.12-dev || echo "Пакет libpcl-visualization1.12-dev не найден"
        echo ""
        echo "=== Альтернативные варианты ==="
        apt-cache search '^libpcl-visualization' || echo "Нет альтернативных пакетов visualization"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          qtbase5-dev \
          libqt5opengl5-dev \
          libvtk9-dev \
          libvtk9-qt-dev \
          libpcl-dev \
          libpcl-visualization1.12-dev \
          libglew-dev \
          debhelper

    - name: Configure and build
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release --parallel 2
        cpack -G DEB

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: aligner-package
        path: build/aligner*.deb

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: "Release for ${{ env.TAG_NAME }}"
        files: build/aligner*.deb
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}