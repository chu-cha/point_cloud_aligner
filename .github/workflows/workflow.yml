name: Build and Release Aligner

on:
  push:
    tags:
      - 'v*'  # Запускать для тегов v1.0, v2.0 и т.д.
    branches:
      - main  # Тестовая сборка для main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: ${{ github.workspace }}/build

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          qt6-base-dev \
          libvtk9-dev \
          libpcl-dev \
          libglew-dev \
          debhelper \
          dpkg-dev

    - name: Configure project
      run: |
        mkdir -p $BUILD_DIR
        cmake -B $BUILD_DIR -S . \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH="/usr/lib/x86_64-linux-gnu/cmake/Qt6"

    - name: Build project
      run: |
        cmake --build $BUILD_DIR --parallel $(nproc)

    - name: Generate DEB package
      run: |
        cd $BUILD_DIR
        cpack -G DEB --config CPackConfig.cmake
        echo "PACKAGE_PATH=$(ls *.deb)" >> $GITHUB_ENV
        
    - name: Debug package path
      run: | 
        echo "Package path: ${{ env.PACKAGE_PATH }}"

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: aligner-package
        path: ${{ env.BUILD_DIR }}/${{ env.PACKAGE_PATH }}
        retention-days: 5

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: "Aligner ${{ github.ref_name }}"
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.BUILD_DIR }}/${{ env.PACKAGE_PATH }}
        asset_name: ${{ env.PACKAGE_PATH }}
        asset_content_type: application/vnd.debian.binary-package
