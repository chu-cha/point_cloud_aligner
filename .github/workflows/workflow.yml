name: Build and Release

on:
  push:
    tags: ['v*']
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: ${{ github.workspace }}/build

    steps:
    - uses: actions/checkout@v4

    - name: Nuclear Qt5 cleanup
      run: |
        sudo apt-get remove --purge -y '^qt5.*' '^libqt5.*'
        sudo rm -rf /usr/lib/x86_64-linux-gnu/cmake/Qt5*
        sudo rm -rf /usr/share/qt5*
        sudo apt-get autoremove -y

    - name: Install Qt6 stack
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          qt6-base-dev \
          libqt6opengl6-dev \
          libvtk9-qt-dev \
          libpcl-dev \
          debhelper

    - name: Configure with forced Qt6
      run: |
        mkdir -p $BUILD_DIR
        cmake -B $BUILD_DIR -S . \
          -DCMAKE_BUILD_TYPE=Release \
          -DQT_MAJOR_VERSION=6 \
          -DQt5_DIR="" \
          -DCMAKE_DISABLE_FIND_PACKAGE_Qt5=ON

    - name: Build
      run: cmake --build $BUILD_DIR --parallel $(nproc)

    - name: Create DEB package
      run: |
        cd $BUILD_DIR
        cpack -G DEB
        echo "DEB_FILE=$(ls *.deb)" >> $GITHUB_ENV

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: "Aligner ${{ github.ref_name }}"
        draft: false
        prerelease: false

    - name: Upload DEB package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.BUILD_DIR }}/${{ env.DEB_FILE }}
        asset_name: ${{ env.DEB_FILE }}