name: Build and Release Ubuntu

on:
  push:
    branches: [main]

jobs:
  build-and-package:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate commit hash tag
      id: tag
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        echo "TAG_NAME=commit-$COMMIT_HASH" >> $GITHUB_ENV

    - name: Detect PCL visualization package
      id: detect-pcl
      run: |
        # Ищем пакет visualization
        PKG_NAME=$(apt-cache search --names-only '^libpcl-visualization' | awk '{print $1}' | head -1)
        
        if [ -z "$PKG_NAME" ]; then
          echo "::warning::PCL visualization package not found in apt!"
          echo "PKG_NAME=libpcl-visualization1.12-dev" >> $GITHUB_ENV  # Fallback
        else
          echo "Found PCL visualization package: $PKG_NAME"
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV
        fi
        
        # Дополнительная диагностика
        echo "=== Available PCL visualization packages ==="
        apt-cache search --names-only '^libpcl-visualization' || true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          qtbase5-dev \
          libqt5opengl5-dev \
          libvtk9-dev \
          libvtk9-qt-dev \
          libpcl-dev \
          ${{ env.PKG_NAME }} \  # Динамически подставляем найденное имя пакета
          libglew-dev \
          debhelper

        # Проверяем что пакет действительно установился
        echo "=== Installed PCL visualization package ==="
        dpkg -l | grep pcl-visualization || echo "::warning::PCL visualization not installed!"

    - name: Configure and build
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release --parallel 2
        cpack -G DEB

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: aligner-package
        path: build/aligner*.deb

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: "Release for ${{ env.TAG_NAME }}"
        files: build/aligner*.deb
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}