name: Build and Release Ubuntu

on:
  push:
    branches: [main]

jobs:
  build-and-package:
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate commit hash tag
      id: tag
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        echo "TAG_NAME=commit-$COMMIT_HASH" >> $GITHUB_ENV

    # 1. Установка только необходимых компонентов Qt6
    - name: Install minimal Qt6
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          qt6-base-dev \
          libqt6opengl6-dev

    # 2. Основные зависимости
    - name: Install core dependencies
      run: |
        sudo apt-get install -y \
          git cmake build-essential \
          ninja-build ccache \
          libgl1-mesa-dev

    # 3. Сборка VTK с минимальной Qt-интеграцией
    - name: Build and install VTK
      run: |
        git clone https://gitlab.kitware.com/vtk/vtk.git --branch v9.3.0 --depth 1
        mkdir vtk/build && cd vtk/build
        
        cmake -GNinja \
          -DVTK_GROUP_ENABLE_Qt=YES \
          -DVTK_QT_VERSION=6 \
          -DVTK_MODULE_ENABLE_VTK_GUISupportQt=YES \
          -DVTK_MODULE_ENABLE_VTK_GUISupportQtQuick=NO \
          -DVTK_MODULE_ENABLE_VTK_RenderingQt=YES \
          -DVTK_BUILD_TESTING=OFF \
          -DVTK_WRAP_PYTHON=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr/local \
          ..
        
        ninja -j$(nproc)
        sudo ninja install
        sudo ldconfig

    # 4. Проверка установки
    - name: Verify VTK installation
      run: |
        echo "=== Проверка установки VTK ==="
        
        # Проверка библиотек
        echo "Библиотеки GUISupportQt:"
        ls /usr/local/lib/libvtkGUISupportQt* || echo "WARNING: GUISupportQt не найден (но это может быть нормально)"
        
        # Проверка конфигурации VTK
        echo "Поиск VTKConfigVersion.cmake:"
        sudo find /usr/local -name "VTKConfigVersion.cmake" 2>/dev/null || echo "VTKConfigVersion.cmake не найден"
        
        # Основная проверка - существует ли вообще директория VTK
        if [ -d "/usr/local/lib/cmake/vtk-9.3" ]; then
          echo "Основные файлы VTK найдены в /usr/local/lib/cmake/vtk-9.3"
          echo "Содержимое директории:"
          ls -la /usr/local/lib/cmake/vtk-9.3/
        else
          echo "ERROR: Директория VTK не найдена!"
          exit 1
        fi
        
        # Дополнительная проверка ключевых файлов
        if [ -f "/usr/local/lib/cmake/vtk-9.3/VTKConfig.cmake" ] || \
           [ -f "/usr/local/lib/cmake/vtk-9.3/vtk-config.cmake" ]; then
          echo "Конфигурационные файлы VTK обнаружены"
        else
          echo "WARNING: Основные конфигурационные файлы VTK не найдены"
          # Не завершаем с ошибкой, так как возможно другая структура установки
        fi
        
    # 6. Установка PCL и GLEW
    - name: Install PCL and GLEW
      run: |
        sudo apt-get install -y \
          libpcl-dev libpcl-visualization1.14 \
          libglew-dev
          
    # 7. Сборка проекта
    - name: Build project
      run: |
        mkdir build && cd build
        cmake .. \
          -DVTK_DIR=/usr/local/lib/cmake/vtk-9.3 \
          -DQt6_DIR=/usr/lib/x86_64-linux-gnu/cmake/Qt6 \
          -DCMAKE_BUILD_TYPE=Release
        cmake --build . --parallel $(nproc)
        cpack -G DEB

    # 6. Публикация результатов
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: aligner-package-${{ env.TAG_NAME }}
        path: build/*.deb