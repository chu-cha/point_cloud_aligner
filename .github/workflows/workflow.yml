name: Build and Release Ubuntu

on:
  push:
    branches: [main]

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Detect Ubuntu version
      id: detect_os
      run: |
        UBUNTU_VERSION=$(lsb_release -sr)
        echo "Ubuntu version: $UBUNTU_VERSION"
        echo "UBUNTU_VERSION=$UBUNTU_VERSION" >> $GITHUB_ENV
        
        if [ "$UBUNTU_VERSION" == "22.04" ]; then
          echo "VTK_VERSION=9.1" >> $GITHUB_ENV
          echo "QT_VERSION=5" >> $GITHUB_ENV
        elif [ "$UBUNTU_VERSION" == "24.04" ]; then
          echo "VTK_VERSION=9.3" >> $GITHUB_ENV
          echo "QT_VERSION=6" >> $GITHUB_ENV
        else
          echo "Unsupported Ubuntu version"
          exit 1
        fi

    - name: Generate commit hash tag
      id: tag
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        echo "TAG_NAME=commit-$COMMIT_HASH" >> $GITHUB_ENV
        echo "Generated tag: $TAG_NAME"

    - name: Install minimal dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git cmake build-essential \
          qt6-base-dev libqt6opengl6-dev \
          libxt-dev libgl1-mesa-dev \
          ninja-build

    - name: Build VTK without Python
      run: |
        git clone https://gitlab.kitware.com/vtk/vtk.git --branch v9.3.0 --depth 1
        mkdir vtk/build && cd vtk/build
        
        cmake -GNinja \
          -DVTK_GROUP_QT=ON \
          -DVTK_QT_VERSION=6 \
          -DVTK_BUILD_TESTING=OFF \
          -DVTK_WRAP_PYTHON=OFF \          # Отключаем Python
          -DVTK_MODULE_USE_EXTERNAL_VTK_pugixml=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr/local \
          ..
        
        ninja
        sudo ninja install
        sudo ldconfig
    - name: Проверить версию VTK
      run: |
        echo "Установленная версия VTK:"
        dpkg -l | grep libvtk9
        echo "Пути :"
        apt-cache show libvtk9-dev | grep Version
        ls /usr/lib/cmake/  # Должна быть папка vtk-9.3
        

    - name: Configure and build
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DVTK_DIR=/usr/lib/cmake/vtk-9.3
        cmake --build . --config Release --parallel $(nproc)
        cpack -G DEB

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: aligner-package
        path: build/aligner*.deb

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: "Release for ${{ env.TAG_NAME }}"
        files: build/aligner*.deb
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}